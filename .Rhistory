index = c( "state.division", "state" ),
vSize = "Population",
vColor = "Income",
type = "value",
bg.labels = "yellow",
title="US")
treemap(us, index = c("stname"), vSize = "Population" , vColor = "Income", type = "value")
#강사님 답안
treemap( us,
index = c( "state.division", "state" ),
vSize = "Population",
vColor = "Income",
type = "value",
bg.labels = "yellow",
title="US")
us <- data.frame(us, stname = rownames(us))
us
treemap( us,
index = c("state.division", "state" ),
vSize = "HS.Grad",
vColor = "Murder",
type = "value",
bg.labels = "yellow",
title = "US")
#(2) 미국 50개 주에 대해 각각의 주들이 지역구분별로 묶인 트리맵을 작성하시오.
#또한, 타일의 면적은 HS.Grad(고등학교 졸업률), 타일의 색은 Murder(범죄률)로 나타내고,
#각각의 타일에는 주의 이름을 표시하시오. 마지막으로 이 트리맵에서 관찰할 수 있는 것이 무엇인지 설명하시오.
treemap(us, index = c("stname"), vSize = "HS.Grad", vColor = "Murder", type = "value")
treemap( us,
index = c("state.division", "state" ),
vSize = "HS.Grad",
vColor = "Murder",
type = "value",
bg.labels = "yellow",
title = "US")
#(2) 미국 50개 주에 대해 각각의 주들이 지역구분별로 묶인 트리맵을 작성하시오.
#또한, 타일의 면적은 HS.Grad(고등학교 졸업률), 타일의 색은 Murder(범죄률)로 나타내고,
#각각의 타일에는 주의 이름을 표시하시오. 마지막으로 이 트리맵에서 관찰할 수 있는 것이 무엇인지 설명하시오.
treemap(us, index = c("stname"), vSize = "HS.Grad", vColor = "Murder", type = "value")
symbols( us$Income, us$Illiteracy,
circles = us$Population,
inches = 0.3,
fg = "white",
bg = "green",
lwd = 1.5,
xlab = "income",
ylab = "illiteracy",
main = "Income and Illiteracy")
text( us$Income, us$Illiteracy,
us$state,
cex = 0.6,
col = "brown" )
text(us$Income, us$Illiteracy, rownames(us),cex = 0.6, col = "brown")
symbols(us$Income, us$Illiteracy, circles = us$Population, bg = "green", xlab = "수입", ylab = "문맹률" )
text(us$Income, us$Illiteracy, rownames(us),cex = 0.6, col = "brown")
symbols( us$Income, us$Illiteracy,
circles = us$Population,
inches = 0.3,
fg = "white",
bg = "green",
lwd = 1.5,
xlab = "income",
ylab = "illiteracy",
main = "Income and Illiteracy")
text( us$Income, us$Illiteracy,
us$state,
cex = 0.6,
col = "brown" )
#(3) us 데이터셋에 대해 x축은 Income(소득), y축은 Illiteracy(문맹률), 원의 크기는
#Population(인구수), 원의 색은 green(초록색), 원 내부에는 주의 이름을 표시한 버블차트를 작성하시오.
#또한 이 버블차트에서 관찰할 수 있는 것이 무엇인지 설명하시오.
symbols(us$Income, us$Illiteracy, circles = us$Population, lwd = 1.5, bg = "green", xlab = "수입", ylab = "문맹률" )
text(us$Income, us$Illiteracy, rownames(us),cex = 0.6, col = "brown")
symbols(us$Income, us$Illiteracy, circles = us$Population, inches = 0.3, bg = "green", xlab = "수입", ylab = "문맹률" )
text(us$Income, us$Illiteracy, rownames(us),cex = 0.6, col = "brown")
symbols( us$Income, us$Illiteracy,
circles = us$Population,
inches = 0.3,
fg = "white",
bg = "green",
lwd = 1.5,
xlab = "income",
ylab = "illiteracy",
main = "Income and Illiteracy")
text( us$Income, us$Illiteracy,
us$state,
cex = 0.6,
col = "brown" )
symbols( us$Illiteracy, us$Murder,
circles = us$Area,
inches = 0.5,
fg = "white",
bg = "green",
lwd = 1.5,
xlab = "illiteracy",
ylab = "murder",
main = "Illiteracy and Murder")
text( us$Illiteracy, us$Murder,
us$state,
cex = 0.6,
col = "brown" )
#4) us 데이터셋에 대해 x축은 Illiteracy(문맹률), y축은 Murder(범죄률), 원의 크기는 Area(면적),
# 원의 색은 green(초록색), 원 내부에는 주의 이름을 표시한 버블차트를 작성하시오.
#또한 이 버블차트에서 관찰할 수 있는 것이 무엇인지 설명하시오.
symbols(us$Illiteracy, us$Murder, circles = us$Area, bg = "green", xlab = "문맹률", ylab = "범죄률")
text(us$Illiteracy, us$Murder, rownames(us), cex = 0.7, col = "brown")
symbols( us$Illiteracy, us$Murder,
circles = us$Area,
inches = 0.5,
fg = "white",
bg = "green",
lwd = 1.5,
xlab = "illiteracy",
ylab = "murder",
main = "Illiteracy and Murder")
text( us$Illiteracy, us$Murder,
us$state,
cex = 0.6,
col = "brown" )
#4) us 데이터셋에 대해 x축은 Illiteracy(문맹률), y축은 Murder(범죄률), 원의 크기는 Area(면적),
# 원의 색은 green(초록색), 원 내부에는 주의 이름을 표시한 버블차트를 작성하시오.
#또한 이 버블차트에서 관찰할 수 있는 것이 무엇인지 설명하시오.
symbols(us$Illiteracy, us$Murder, circles = us$Area, inches = 0.5, bg = "green", xlab = "문맹률", ylab = "범죄률")
text(us$Illiteracy, us$Murder, rownames(us), cex = 0.7, col = "brown")
tmp <- table( mtcars$gear )
df <- data.frame( tmp )
df
ggplot( df, aes( x = Var1, y = Freq ) ) +
geom_bar( stat = "identity", width = 0.7, fill = "steelblue" ) +
ggtitle( "기어의 수" ) +
theme( plot.title = element_text( size = 25, face = "bold", colour = "steelblue" ) ) +
labs( x = "기어의수", y = "빈도수" )
ggplot( df, aes( x = Var1, y = Freq ) ) +
geom_bar(  width = 0.7, fill = "steelblue" ) +
ggtitle( "기어의 수" ) +
theme( plot.title = element_text( size = 25, face = "bold", colour = "steelblue" ) ) +
labs( x = "기어의수", y = "빈도수" )
ggplot( df, aes( x = Var1, y = Freq ) ) +
geom_bar(  width = 0.7, fill = "steelblue" ) +
ggtitle( "기어의 수" ) +
theme( plot.title = element_text( size = 25, face = "bold", colour = "steelblue" ) ) +
labs( x = "기어의수", y = "빈도수" )
ggplot( df, aes( x = Var1, y = Freq ) ) +
geom_bar(fill = "steelblue" ) +
ggtitle( "기어의 수" ) +
theme( plot.title = element_text( size = 25, face = "bold", colour = "steelblue" ) ) +
labs( x = "기어의수", y = "빈도수" )
#
#
#mosaic 시각화 함수 사용방법 사이트
#https://www.rdocumentation.org/packages/vcd/versions/1.4-4/topics/mosaic
#
#    mosaic은 범주형이면서 다중 범주일때 사용한다.
#
#
#다중변수 범주형 데이터에 대한 각 변수의 그룹별 비율을 면적으로 표시
#
str(mtcars)
head(mtcars)
str(mtcars)
head(mtcars)
mosaicplot(~gear + vs,              #대상변수
data = mtcars,           #데이터셋
color = TRUE,            #y측 변수의 그룹별 음영 다르게 표시
main = "Gear and Vs")
str(mtcars)
head(mtcars)
mosaicplot(~gear + vs,              #대상변수
data = mtcars,           #데이터셋
color = TRUE,            #y측 변수의 그룹별 음영 다르게 표시
main = "Gear and Vs")
mosaicplot( ~gear + vs, data = mtcars,
color = c("green", "blue"),
main = "Gear and Vs")
tbl <- table(mtcars$gear, mtcars$vs)
tbl
mosaicplot(tbl, color = T, main = "Gear and Vs")
mosaicplot(tbl, color = gear, main = "Gear and Vs")   #여시서는 x,y 변수를 따로 주지 않아도 적용된다.
mosaicplot(tbl, color = mtcars$gear, main = "Gear and Vs")   #여시서는 x,y 변수를 따로 주지 않아도 적용된다.
T
mosaicplot(tbl, color = T, main = "Gear and Vs")   #여시서는 x,y 변수를 따로 주지 않아도 적용된다.
mosaicplot(tbl, color = mtcars$vs, main = "Gear and Vs")   #여시서는 x,y 변수를 따로 주지 않아도 적용된다.
mosaicplot(tbl, color = vs, main = "Gear and Vs")   #여시서는 x,y 변수를 따로 주지 않아도 적용된다.
mosaicplot(tbl, color = T, main = "Gear and Vs")   #여시서는 x,y 변수를 따로 주지 않아도 적용된다.
#
# 차원 축소( Dimension Reduction )
#
install.packages("Rtsne")
library(Rtsne)
library( ggplot2)
ds <- iris[, -5]
# 차원 축소
# 중복 데이터 제거
dup = which(duplicated(ds))
# 차원 축소
# 중복 데이터 제거
dup = which(duplicated(ds))   #
dup
ds <- ds[ - dup, ]
ds.y <- iris$Species[ -dup ]
# 차원 축소 수행 - t-SNE 함수 실행
tsne <- Rtsne(ds,     #차원 죽소 대상 데이터 셋
dim = 2,  #축소할 차원 2/ 3차원
perplexity = 10)
tsne <- Rtsne(ds, dim = 2, perplexity = 10)
tsne
#차원 축소 결과 시각화
df.tens <- data.frame(tsne$Y)
head(df.tens)
ggplot(df.tens, aes(x = X1, y = X2, color = ds.y)) +
geom_point(size = 2)
df.tens <- data.frame(tsne$Y)    #Y변수값을 추출해서 그 Y값의 변화? 값으로 그래프를 그리겠다. 는 뜻..?
head(df.tens)
ggplot(df.tens, aes(x = X1, y = X2, color = ds.y)) +
geom_point(size = 2)
ggplot(df.tens, aes(x = X1, y = X2, color = ds.y)) +
geom_point(size = 2)
ggplot(df.tens, aes(x = X1, y = X2, color = ds.y)) +
geom_point(size = 2)
install.packages(c("rgl", "car"))
library(car)
library(rgl)
library(mgcv)
tsne <- Rtsne(ds, dim = 3, perplexity = 10)
df.tsne <- data.frame(tsne$Y)
head(df.tsne)
scatter3d(x = df.tsne$X1, y = df.tsne$X2, z = df.tsne$X3)
tsne <- Rtsne(ds, dims = 3, perplexity = 10)
df.tsne <- data.frame(tsne$Y)
head(df.tsne)
scatter3d(x = df.tsne$X1, y = df.tsne$X2, z = df.tsne$X3)
points <- as.integer(ds.y)
color <- c('red', 'green', 'blue')
scatter3d(x = ds.tsne$X1, y = ds.tsne$X2, z = ds.tsne$X3)
scatter3d(x = df.tsne$X1, y = df.tsne$X2, z = df.tsne$X3)
scatter3d(x = df.tsne$X1, y = df.tsne$X2, z = df.tsne$X3,
point.col = color[points], surface = FALSE)
points <- as.integer(ds.y)
color <- c('red', 'green', 'blue')
scatter3d(x = df.tsne$X1, y = df.tsne$X2, z = df.tsne$X3,
point.col = color[points], surface = FALSE)
install.packages(c("callr", "cli", "data.table", "openxlsx"))
install.packages("ggmap")
install.packages(c("data.table", "openxlsx"))
library(ggmap)
detach("package:ggplot2", unload = TRUE)
library(ggplot2)
library(hrbrthemes)
library(plogr)
library(ggmap)
register_google(key = "AIzaSyDlnUhm-Llf-JUjfPpyNG6yEkeZDwoiAi4")
gc <- geocode(enc2utf8("제주"))
gc
cen <- as.numeric(gc)
cen
# 지도 표시
map <- get_googlemap(center = cen)
ggmap(map)
gc <- geocode( enc2utf8( "한라산"))
cen <- as.numeric( gc)
cen <- as.numeric( gc)
map <- get_googlemap(center = cen, zoom = 10, size = c(640, 640), maptype = "roadmap")
ggmap(map)
gc <- geocode(enc2utf8("제주"))     # geocode : 어느 특정지점("이름")의 지도상의 경도와 위도를 알려주는 함수
gc                                  # 형식 : tibble
cen <- as.numeric(gc)               # 경도/위도를 숫자로 변환
cen                                 # tibble은 frame같은 형식이라서 숫자로 사용하지 못한다.그래서 꼭 숫자로 바꿔줘야한다.
# 지도 표시
map <- get_googlemap(center = cen)  # 지도 중심점(center) 좌표
ggmap(map)
gc <- geocode( enc2utf8( "한라산"))
cen <- as.numeric( gc)
map <- get_googlemap(center = cen,           #지도 중심점 좌표
zoom = 10,              # 지도 확대 정도
size = c(640, 640),     # 지도 크기
maptype = "roadmap")    # 지도 유형
ggmap(map)
gc <- geocode( enc2utf8( "한라산"))
cen <- as.numeric( gc)
map <- get_googlemap(center = cen,           #지도 중심점 좌표
zoom = 10,              # 지도 확대 정도
size = c(640, 640))
ggmap(map)
gc <- geocode( enc2utf8( "한라산"))
cen <- as.numeric( gc)
map <- get_googlemap(center = cen,           #지도 중심점 좌표
zoom = 10,              # 지도 확대 정도
size = c(640, 640),     # 지도 크기
maptype = "roadmap")    # 지도 유형 // roadmap : 도로 중심 지도
ggmap(map)
cen <- c(126.561099, 33.253077)
map <- get_googlemap(center = cen, zoom = 12, maptype = "roadmap")
ggmap(map)
map <- get_googlemap(center = cen, zoom = 20, maptype = "roadmap")
ggmap(map)
map <- get_googlemap(center = cen, zoom = 15, maptype = "roadmap")
ggmap(map)
map <- get_googlemap(center = cen, zoom = 18, maptype = "roadmap")
ggmap(map)
# 지도 위 마커 표시
gc <- geocode(enc2utf8("제주"))
cen <- as.numeric(gc)
map
map <- get_googlemap(center = cen, maptype = "roadmap", marker = gc)
ggmap(map)
# 지도 위 마커 표시
gc <- geocode(enc2utf8("동광초등학교교"))
# 지도 위 마커 표시
gc <- geocode(enc2utf8("동광초등학교"))
cen <- as.numeric(gc)
map <- get_googlemap(center = cen, maptype = "roadmap", marker = gc)
ggmap(map)
# 지도 위 마커 표시
gc <- geocode(enc2utf8("안녕 협재씨씨"))
# 지도 위 마커 표시
gc <- geocode(enc2utf8("안녕 협재씨"))
cen <- as.numeric(gc)
map <- get_googlemap(center = cen, maptype = "roadmap", marker = gc)
ggmap(map)
# 지도 위 마커 표시
gc <- geocode(enc2utf8("제주"))
cen <- as.numeric(gc)
map <- get_googlemap(center = cen, maptype = "roadmap", marker = gc)
ggmap(map)
names <- c("용두암", "성산일출봉", "정방폭포","중문관광단지","한라산1100고지", "차귀도")
addr <- c("제주시 용두암 길 15", "서귀포시 성산읍 성산리", "서귀포시 동흥동 299-3", "서귀포시 중문동 2624-1",
"서귀포시 색달동 산1-2", "제주시 한경면 고산리 125")
gc <- geocode(enc2utf8(addr))
gc
#  *참고* 내가 표시하고 싶은 장소의 위도와 경도를 뽑아와서 데이터 프레임으러 만든 후 바로 구글맵에 사용하면 된다.
df <- data.frame(name = names, lon = gc$lon, lat = gc$lat)
df
cen <- c(mean(df$lon), mean(df$lat))
map <- get_googlemap(center = cen, maptype = "roadmap", zoom = 10, size = c(640, 640), markers = gc)
ggmap(map)
# 지도에 관광지 이흠 추가
gmap <- ggmap(map)
gmap +
geom_text(data = df,
aes(x = lon , y = lat),
size = 5,
label = df$names)
gmap +
geom_text(data = df,
aes(x = lon , y = lat),
size = 5,
label = df$name)
# 지도에 데이터 표시
dim(wind)
str(wind)
sp <- sample(1:nrow(wind), 50 )
df <- wind[ sp, ]
head(df)
cen <- c(mean(df$lon), mean(df$lat))
gc <- data.frame(lon = df$lon, lat = df$lat)
head(gc)
map <- get_googlemap(center = ccenter,
maptype = "roadmap",
zoom = 6,
markers = gc)
ggmap(map)
map <- get_googlemap(center = cen,
maptype = "roadmap",
zoom = 6,
markers = gc)
ggmap(map)
# 지도에 풍속을 원의 크기로 표시
map <- get_googlemap(center = cen,
maptype = "roadmap",
zoom = 6)
gmap <- ggmap(map)
gmap +
geom_point(data = df,
aes(x = lon, y = lat, size = spd),
alpha = 0.5, col = "blue") +
scale_size_continuous(range = c(1,14))
#단계 구분도
install.packages("ggiraphExtra")
library( ggiraphExtra)
dim(USArrests)
str
str(USArrests)
head(USArrests)
library(tibble)
crime <- rownames_to_column(USArrests, var = "state")
crime$state <- tolower(crime$state)
str(crime)
library(ggplot2)
install.packages("mappro")
install.packages("mapproj")
library(mapproj)
state_map <- map_data("state")
str(state_map)
ggChoropleth( ddata = crime,
aes( fill = Murder,
map_id = state),
map = state_map)
ggChoropleth( ddata = crime,
mapping = aes( fill = Murder,
map_id = state),
map = state_map)
ggChoropleth( data = crime,
mapping = aes( fill = Murder,
map_id = state),
map = state_map)
install.packages("devtools")
devtools::install_github("cardiomoon/kormaps2014")
devtools::install_github("cardiomoon/moonBook2")
library(kormaps2014)
library(moonBook2)
areacode
str(kormap1)
library(ggplot2)
theme_set(theme_gray(base_family="NanumGothic"))
ggplot(korpop1,aes(map_id=code,fill=총인구_명))+
geom_map(map=kormap1,colour="black",size=0.1)+
expand_limits(x=kormap1$long,y=kormap1$lat)+
scale_fill_gradientn(colours=c('white','orange','red'))+
ggtitle("2015년도 시도별 인구분포도")+
coord_map()
ggplot(korpop2,aes(map_id=code,fill=총인구_명))+
geom_map(map=kormap2,colour="black",size=0.1)+
expand_limits(x=kormap2$long,y=kormap2$lat)+          # expand_limits : 범위 : 경도 & 위도
scale_fill_gradientn(colours=c('white','orange','red'))+
ggtitle("2015년도 시도별 인구분포도")+
coord_map()                                           # 회전
st <- as.data.frame(stat.x77)
st <- as.data.frame(state.x77)
library(Rtsne)
library(ggplot2)
warnings()
str(st)
dup = which(duplicated(st))
dup = which(duplicated(st))
warnings()
dup = which(duplicated(st))
dup
st <- st[-dup,]
tsne <- Rtsne(st, dim = 2, perplexity = 10)
st <- as.data.frame(state.x77)
<<<<<<< HEAD
str(st)
library(Rtsne)
library(ggplot2)
dup = which(duplicated(st))
dup
st <- st[-dup,]
tsne <- Rtsne(st, dim = 2, perplexity = 10)
tsne <- Rtsne(st, dim = 2, perplexity = 3)
tsne <- Rtsne(st, dim = 2, perplexity = 1)
tsne <- Rtsne(st, dim = 2, perplexity = 0.5)
tsne <- Rtsne(st, dim = 2, perplexity = 0.1)
tsne <- Rtsne(st, dim = 2, perplexity = 0)
tsne <- Rtsne(st, dim = 2, perplexity = 0.000001)
tsne <- Rtsne(st, dim = 2, perplexity = 15)
dim(st)
tsne <- Rtsne(st, dim = 2, perplexity = 2)
st <- as.data.frame(state.x77)
str(st)
library(Rtsne)
library(ggplot2)
dup = which(duplicated(st))
dup
dim(st)
tsne <- Rtsne(st, dim = 2, perplexity = 15)
tsne
df.tens <- data.frame(tsne$Y)
head(df.tens)
ggplot(df.tens, aes(x = X1, y = X2, color = st)) +
geom_point(size = 2)
ggplot(df.tens, aes(x = X1, y = X2, color = TRUE )) +
geom_point(size = 2)
ggplot(df.tens, aes(x = X1, y = X2)) +
geom_point(size = 2)
tsne.1 <- Rtsne(st, dim = 3, perplexity = 15)
tsne.1
df.tens.1 <- data.frame(tsne.1$Y)
head(df.tens.1)
ggplot(df.tens.1, aes(x = X1, y = X2, z = X3)) +
geom_point(size = 2)
library(car)
library(rgl)
library(mgcv)
scatter3d(x = df.tsne.1$X1, y = df.tsne.1$X2, z = df.tens.1$X3)
scatter3d(x = df.tsne.1$X1, y = df.tsne.1$X2, z = df.tsne.1$X3)
scatter3d(x = df.tens.1$X1, y = df.tens.1$X2, z = df.tens.1$X3)
#문2)
#R에서 제공하는 swiss 데이터셋을 차원 축소하여 2차원 산점도와 3차원산점도를 작성하시오.
swiss
str(swiss)
dup1 <- which(duplicated(swiss))
dup1
dim(swiss)
sne <- Rtsne(swiss, dim = 2,perplexity = 15 )
sne
s <- data.frame(sne$Y)
ggplot(s, aes(x = X1, y = X2)) +
geom_point(size = 3)
ggplot(s, aes(x = X1, y = X2)) +
geom_point(size = 3)
warnings()
ggplot(s, aes(x = X1, y = X2)) +
geom_point(size = 3)
s <- data.frame(sne$Y)
ggplot(s, aes(x = X1, y = X2)) +
geom_point(size = 3)
detach("package:hrbrthemes", unload = TRUE)
ggplot(s, aes(x = X1, y = X2)) +
geom_point(size = 3)
detach("package:ggiraphExtra", unload = TRUE)
detach("package:plogr", unload = TRUE)
ggplot(s, aes(x = X1, y = X2)) +
geom_point(size = 3)
=======
(st)
rowSums(st)
#13. 인구가 5,000 이상인 주의 데이터만 출력
st.1 <- subset(st, Population >= 5000); st.1
#15. 수입이 4,500 이상인 주는 몇 개인지 출력
length(rownames(st.2))
#강사님 답안
nrow( subset( st, Income >= 4500 ) )    #nrow:수를 세는 함수
#다른 방법
mean(subset(st, Illiteracy >= 2.0)$ Income)
stt <- subset(st, Illiteracy >= 2.0)
stt
mean(stt$Income)
#6. Honda Civic의 연비(mpg)와 gear 수 출력
mtcars["Honda Civic",c("mpg","gear")]
install.packages(c("gapminder", "hrbrthemes", "plotly", "tidyverse", "treemap", "viridis"))
library(tidyverse)
rain <- c(55,50,45,50,60,70)
df <- data.frame(month, rain)
df
month <- c(1,2,3,4,5,6)
rain <- c(55,50,45,50,60,70)
df <- data.frame(month, rain)
df
data("mtcars")
mt <- data.frame(mtcars)
ggplot(data = mt) +
geom_bar(mapping =aes(x = cyl), fill = "green" )
ggplot(data = mt) +
geom_bar(mapping =aes(x = cyl, fill = "green") )
str(mt)
cyl.1 <- as.factor(mt$cyl)
ggplot(data = mt, mapping = aes(y = mpg, fill = cyl.1, position = "dodge")) +
geom_boxplot()
ggplot(data = mt) +
geom_bar(mapping =aes(x = cyl), fill = "green" )
ggplot(data = mt, mapping = aes(y = mpg), fill = cyl.1, position = "dodge") +
geom_boxplot()
ggplot(data = mt, mapping = aes(y = mpg, fill = cyl.1, position = "dodge")) +
geom_boxplot()
ggplot(data = mt, aes(x = cyl, fill = "green")) + geom_bar()
ggplot(data = mt, aes(x = cyl), fill = "green") + geom_bar()
ggplot(data = mt, aes(x = cyl, fill = "green")) + geom_bar()
ggplot(data = mt, aes(x = cyl, fill = "blue")) + geom_bar()
ggplot(data = mt, mapping = aes(x = cyl, fill = "blue")) + geom_bar()
ggplot(data = mt, mapping = aes(x = cyl), fill = "blue") + geom_bar()
ggplot(data = mt, mapping = aes(x = cyl), color = "blue") + geom_bar()
ggplot(data = mt, mapping = aes(x = cyl, color = "blue")) + geom_bar()
ggplot(data = mt, mapping = aes(x = cyl, fill = "blue")) + geom_bar()
ggplot(data = mt) +
geom_bar(mapping =aes(x = cyl), fill = "green" )
ggplot(data = mt) +
geom_bar(mapping =aes(x = cyl), fill = "blue" )
ggplot(data = mt) +
geom_histogram(mapping = aes(x = mpg ), binwidth = 5.0)
ggplot(data = mt) +
geom_histogram(mapping = aes(x = mpg , binwidth = 5.0))
)
ggplot(data = mt) +
geom_histogram(mapping = aes(x = mpg ), binwidth = 5.0)
ggplot(mt, aes(x = mpg, binwidth = 5.0)) + geom_histogram()
ggplot(data = mt) +
geom_bar(mapping =aes(x = cyl), fill = "green" )
#!!!! 문3) !!!!
#R에서 제공하는 mtcars 데이터셋에서 mpg(연비)에 대해 구간 간격이 5.0인 히스토그램을 ggplot으로 작성하시오.
ggplot(data = mt) +
geom_histogram(mapping = aes(x = mpg ), binwidth = 5.0)
#!!!! 문3) !!!!
#R에서 제공하는 mtcars 데이터셋에서 mpg(연비)에 대해 구간 간격이 5.0인 히스토그램을 ggplot으로 작성하시오.
ggplot(data = mt) +
geom_histogram(mapping = aes(x = mpg ), binwidth = 5.0)
ggplot(mt, aes(x = mpg)) + geom_histogram(binwidth = 5.0)
ggplot(iris, aes(x = Petal.Length)) + geom_histogram(binwidth = 0.5)    #binwidth는 y값의 count(한 블록) 기준. / 즉, 꽃잎의 단위를 0.5단위로 계산해라.
#수정
ggplot(mt, aes(x = mpg, binwidth = 5.0)) + geom_histogram()
mt$mpg
ggplot(mt, aes(x = mpg)) + geom_histogram(binwidth = 5.0)
ggplot(mt, aes(x = mpg)) + geom_histogram()
ggplot(mt, aes(x = mpg)) + geom_histogram(bins = 30)
ggplot(mt, aes(x = mpg)) + geom_histogram(bins = 5.0)
ggplot(iris, aes(x = Petal.Length)) + geom_histogram(binwidth = 0.5)    #binwidth는 y값의 count(한 블록) 기준. / 즉, 꽃잎의 단위를 0.5단위로 계산해라.
ggplot(mt, aes(x = mpg)) + geom_histogram(bins = 5.0)
ggplot(iris, aes(x = Petal.Length)) + geom_histogram(bins = 0.5)    #binwidth는 y값의 count(한 블록) 기준. / 즉, 꽃잎의 단위를 0.5단위로 계산해라.
ggplot(iris, aes(x = Petal.Length)) + geom_histogram(bins = 0.5)    #binwidth는 y값의 count(한 블록) 기준. / 즉, 꽃잎의 단위를 0.5단위로 계산해라.
ggplot(mt, aes(x = mpg)) + geom_histogram(binwidth  = 5.0)
#수정
ggplot(mt, aes(x = mpg, binwidth = 5.0)) + geom_histogram()
mt$mpg
ggplot(mt, aes(x = mpg)) + geom_histogram(binwidth  = 5.0)
#수정 - 둘중 pick.
ggplot(mt, aes(x = mpg, binwidth = 5.0)) + geom_histogram()
ggplot(mt, aes(x = mpg)) + geom_histogram(binwidth  = 5.0)
ggplot(data = trees) +
geom_histogram(mapping = aes(x = Girth), binwidth = 3.0, fill = "steelblue") +
labs(x = "나무 둘레", y = "빈도수")
ggplot(data = trees) +
geom_histogram(mapping = aes(x = Girth, binwidth = 3.0, fill = "steelblue")) +
labs(x = "나무 둘레", y = "빈도수")
ggplot(trees, aes(x = Girth)) + geom_histogram(binwidth = 3, fill = "steelblue")
ggplot(iris, aes(x = Sepal.Width, fill = Species, color = Species)) +   #색을 품종별로 지정.(fill = 품종 <- 막대 색. color = 막대 경계선
geom_histogram(binwidth = 0.5, position = "dodge") +                  #position = 막대를 어떻게 넣을지. 여기서는 막대를 품종별로 각각 그려라.
theme( legend.position = "top")
ggplot(iris, aes(x = Sepal.Width, fill = Species, color = Species)) +   #색을 품종별로 지정.(fill = 품종 <- 막대 색. color = 막대 경계선
geom_histogram(binwidth = 0.5) +                  #position = 막대를 어떻게 넣을지. 여기서는 막대를 품종별로 각각 그려라.
theme( legend.position = "top")                                       #그래프 테마, 위에다가 넣어라.// theme은 다르게 분리해 놓면 좋다.
, position = "dodge"
ggplot(iris, aes(x = Sepal.Width, fill = Species, color = Species)) +   #색을 품종별로 지정.(fill = 품종 <- 막대 색. color = 막대 경계선
geom_histogram(binwidth = 0.5, position = "dodge") +                  #position = 막대를 어떻게 넣을지. 여기서는 막대를 품종별로 각각 그려라.
theme( legend.position = "top")                                       #그래프 테마, 위에다가 넣어라.// theme은 다르게 분리해 놓면 좋다.
# ggplot2 Scatter Chart
ggplot(data = iris, mapping = aes(x = Petal.Length, y = Petal.Width)) + geom_point()    #geom에 아무것도 넣지 않으면 기본판이 나온다(점, 격자판)
ggplot(data = iris) + geom_point(mapping = aes(x = Petal.Length, y = Petal.Width))      #위에 것과 같은데 방식차이.
#즉 꼭 필요한것은 data, mapping(x와 y)은 제일 기본 정보.
# - 업그레이드 버전
ggplot(data = iris, mapping = aes(x = Petal.Length, y = Petal.Width, color = Species, shape = Species)) + geom_point( size = 3) +  #점모양,점 크기
ggtitle("꽃잎의 길이와 폭") +
theme(plot.title = element_text(size = 25, face = "bold", color = "red"))
ggplot(data = iris, mapping = aes(y = Petal.Length, fill = Species)) + geom_boxplot()   #종류별로 box그리기
year <- 1937 : 1960
cnt <- as.vector(airmiles)
df <- data.frame(year, cnt)
df
head(df)
ggplot(df, aes(x = year, y = cnt)) + geom_line(col = "red")
ggplot(economics, aes(x = date, y = psavert)) +
geom_line() +
geom_abline(intercept = 12.18671, slope = -0.0005444)
ggplot(economics, aes(x = date, y = psavert)) +
geom_line() +
geom_hline(yintercept = mean(economics$psavert))
psavert == min(economics$psavert))$date
ggplot(mtcars, aes(x = wt, y = mpg)) +
geom_point() +                                                                                  # annotate는 지정범위 정하기. rect는 범위모양(네모)
annotate( "rect", xmin = 3, xmax = 4, ymin = 12, ymax = 21, alpha = 0.5, fill = "skyblue") +    # alpha는 투명도 조절 :  0.1 ~ 1 사이 . 1에 가까울수록 불투명
annotate("segment", x = 2.5, xend = 3.7, y = 10, yend = 17, color = "red", arrow = arrow()) +   # 화살표 지정하기 (화살표 길이 정하기)
annotate("text", x = 2.5, y = 10, label = "point")                                              #내용 입력하기. 글 추가
# annotate는 개별로 layer넣기.
>>>>>>> c513deaf944062ac12c0bec53f42fdec23f15d1c
