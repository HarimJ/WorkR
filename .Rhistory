# 군집화
data <- data.frame(state.x77)
fit <- kmeans( x = data, center = 5 )
# 0~1 표준화 함수
std <- function( x ) {
result <- ( x - min( x ) ) / ( max( x ) - min( x ) )   # 범위를 0에서 1 사이로 만들어 주는 식 (표준화식)
return( result )
}
# 데이터 표준화
ds.new <- std( state.x77 )
# 군집화
fit <- kmeans( x = ds.new, centers = 5 )   # 표준화된 데이터를 5개의 그룹으로 (5군집)으로 만들어라
fit
# 차원 축소 후 군집 시각화
library( cluster )
clusplot( ds.new, fit$cluster, color = TRUE, shade = TRUE, labels = 2, lines = 0 )
# 표준화
st <- function( x ){
return( ( x - min( x ) ) / (max( x ) - min( x ) ) )
}
# 군집화
data <- data.frame(state.x77)
fit <- kmeans( x = data, center = 5 )
data <- apply( data, 2, st)
fit <- kmeans( x = data, center = 5 )
fit
clusplot( data, fit$cluster, color = T, shade = T, labels = 1, lines = 1)
library( mlbench )
data( "Sonar" ) 			# 데이터셋 불러오기
dim( Sonar )
str( Sonar )
head( Sonar )
ds.new <- Sonar[ ,-61 ]   # Class 열 제거
# 군집화
fit <- kmeans( x = ds.new, centers = 2 )
# 차원 축소 후 군집 시각화
clusplot( ds.new, fit$cluster, color = TRUE, shade = TRUE, labels = 2, lines = 0 )
# 차원 축소 후 군집 시각화
library( cluster )
# 차원 축소 후 군집 시각화
clusplot( ds.new, fit$cluster, color = TRUE, shade = TRUE, labels = 2, lines = 0 )
